{"version":3,"file":"component---templates-service-index-tsx-9ccb5df6dcd1bd18ed56.js","mappings":"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","sources":["webpack://gatsby-starter-hello-world/./src/components/shared/ImageGallery/ImageGallery.tsx","webpack://gatsby-starter-hello-world/./src/components/shared/ImageGallery/index.ts","webpack://gatsby-starter-hello-world/./src/components/shared/TextPoint/index.ts","webpack://gatsby-starter-hello-world/./src/components/shared/TextPoint/TextPoint.tsx","webpack://gatsby-starter-hello-world/./src/components/shared/buttons/CallButton/CallButton.tsx","webpack://gatsby-starter-hello-world/./src/components/shared/buttons/CallButton/index.ts","webpack://gatsby-starter-hello-world/./templates/service/index.tsx"],"sourcesContent":["import React, {useEffect} from 'react'\nimport './style.scss'\nimport {Fancybox as NativeFancybox} from '@fancyapps/ui/dist/fancybox.esm.js'\nimport \"@fancyapps/ui/dist/fancybox.css\";\nimport {graphql, useStaticQuery} from \"gatsby\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nimport classNames from \"classnames\";\nimport Container from \"/components/shared/Container\";\nimport HighlighterText from \"/components/shared/HighlighterText\";\nimport Title from \"/components/shared/Title\";\n\nfunction Fancybox(props: any) {\n  const delegate = props.delegate || \"[data-fancybox]\";\n\n  useEffect(() => {\n    const opts = props.options || {};\n\n    NativeFancybox.bind(delegate, opts);\n\n    return () => {\n      NativeFancybox.destroy();\n    };\n  }, []);\n\n  return <>{props.children}</>;\n}\n\nconst ImageGallery = ({ page }) => {\n  let edges = useStaticQuery(all).allMdx.edges\n  if (page) {\n    edges = edges.filter((edge: any) => edge.node.frontmatter.for_page === page)\n  }\n\n  const options = {\n    Thumbs: false,\n    Toolbar: false,\n    Image: {\n      zoom: false,\n      click: false,\n      wheel: \"slide\",\n    }\n  }\n\n  return (\n    <section className=\"gallery\">\n      <Container>\n        <Title\n          title=\"Наши последние работы\"\n          subtitle=\"Работаем на результат\"\n          titleSearchWords={['работы']}\n        />\n        <ul className='gallery__list'>\n          {edges.map((edge: any, edgeIndex: number) => (\n              <li className='gallery__item' key={`gallery__item-${edgeIndex}`}>\n                <Fancybox options={options}>\n                  {edge.node.frontmatter.images.map((image: any, imageIndex: number) => {\n                    const hidden = imageIndex !== 0 ? \"gallery__content--hidden\" : \"\"\n                    const classes = classNames(\"gallery__content\", hidden)\n                    return (\n                      <div className={classes}>\n                        <GatsbyImage className=\"gallery__image rounded\"\n                                     key={`gallery__image-${imageIndex}`}\n                                     alt={edge.node.frontmatter.image_alt}\n                                     image={getImage(image)}\n                                     data-fancybox={`gallery-${edgeIndex}`}/>\n                        <div className='gallery__description'>\n                          <HighlighterText\n                            className=\"gallery__title\"\n                            text={`Объект: ${edge.node.frontmatter.facility}`}\n                            searchWords={[edge.node.frontmatter.facility]}\n                          />\n\n                          <p className='gallery__text'>\n                            {edge.node.frontmatter.description}\n                          </p>\n                          <HighlighterText\n                            className=\"gallery__date\"\n                            text={`Объект сдан: ${edge.node.frontmatter.date}`}\n                            searchWords={[edge.node.frontmatter.date]}\n                          />\n                        </div>\n                      </div>\n                    )\n                  })}\n                </Fancybox>\n              </li>\n            )\n          )}\n        </ul>\n      </Container>\n    </section>\n\n  )\n}\n\nexport const all = graphql`\nquery GalleryBySlug {\n  allMdx(filter: {frontmatter: {type: {eq: \"examples-of-work\"}}}\n  sort: {\n          fields: [frontmatter___sort]\n          order: DESC\n        }\n  ) {\n    edges {\n      node {\n        frontmatter {\n          date\n          description\n          facility\n          image_alt\n          for_page\n          images {\n            childImageSharp {\n              gatsbyImageData\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`\n\nexport default ImageGallery\n\n\n{/*{edges.map((edge: any, index: number) => {*/\n}\n{/*  return (*/\n}\n{/*    // <div*/\n}\n{/*    //   data-caption={edge.node.frontmatter.description}*/\n}\n{/*    //   data-fancybox=\"gallery\"*/\n}\n{/*    // >*/\n}\n{/*    //   <img className=\"rounded\" src=\"https://lipsum.app/id/1/200x150\"/>*/\n}\n{/*    // </div>*/\n}\n{/*  //<GatsbyImage className=\"temp rounded\" alt={edge.node.frontmatter.image_alt} image={getImage(edge.node.frontmatter.images[0])} data-caption={edge.node.frontmatter.description} data-fancybox=\"gallery\" />*/\n}\n{/*  // <li className=\"partners__item\" key={`partners__item-${index}`}>*/\n}\n{/*  //   <GatsbyImage alt='Логотип партнера' image={getImage(edge.node)}/>*/\n}\n{/*  // </li>*/\n}\n{/*  )*/\n}\n{/*})}*/\n}\n\n{/*<a*/\n}\n{/*  data-caption=\"Vestibulum lobortis ultricies ipsum, a maximus ligula dignissim in. Sed consectetur tellus egestas, consequat dolor at, tempus augue. \"*/\n}\n{/*  data-fancybox=\"gallery\"*/\n}\n{/*  href=\"https://lipsum.app/id/1/800x450\"*/\n}\n{/*>*/\n}\n{/*  <img className=\"rounded\" src=\"https://lipsum.app/id/1/200x150\"/>*/\n}\n{/*</a>*/\n}\n{/*<a*/\n}\n{/*  className=\"hidable\"*/\n}\n{/*  data-caption=\"Short caption\"*/\n}\n{/*  data-fancybox=\"gallery\"*/\n}\n{/*  href=\"https://lipsum.app/id/2/800x450\"*/\n}\n{/*>*/\n}\n{/*  <img className=\"rounded\" src=\"https://lipsum.app/id/2/200x150\"/>*/\n}\n{/*</a>*/\n}\n{/*<a*/\n}\n{/*  className=\"hidable\"*/\n}\n{/*  data-caption=\"\"*/\n}\n{/*  data-fancybox=\"gallery\"*/\n}\n{/*  href=\"https://lipsum.app/id/3/800x450\"*/\n}\n{/*>*/\n}\n{/*  <img className=\"rounded\" src=\"https://lipsum.app/id/3/200x150\"/>*/\n}\n{/*</a>*/\n}\n{/*<a*/\n}\n{/*  className=\"hidable\"*/\n}\n{/*  data-caption=\"\"*/\n}\n{/*  data-fancybox=\"gallery\"*/\n}\n{/*  href=\"https://lipsum.app/id/4/800x450\"*/\n}\n{/*>*/\n}\n{/*  <img src=\"https://lipsum.app/id/4/200x150\"/>*/\n}\n{/*</a>*/\n}\n{/*<a*/\n}\n{/*  className=\"hidable\"*/\n}\n{/*  data-caption=\"\"*/\n}\n{/*  data-fancybox=\"gallery\"*/\n}\n{/*  href=\"https://lipsum.app/id/5/800x450\"*/\n}\n{/*>*/\n}\n{/*  <img className=\"rounded\" src=\"https://lipsum.app/id/5/200x150\"/>*/\n}\n{/*</a>*/\n}\n{/*<a*/\n}\n{/*  className=\"hidable\"*/\n}\n{/*  data-caption=\"\"*/\n}\n{/*  data-fancybox=\"gallery\"*/\n}\n{/*  href=\"https://lipsum.app/id/6/800x450\"*/\n}\n{/*>*/\n}\n{/*  <img className=\"rounded\" src=\"https://lipsum.app/id/6/200x150\"/>*/\n}\n{/*</a>*/\n}\n{/*<a*/\n}\n{/*  className=\"hidable\"*/\n}\n{/*  data-caption=\"\"*/\n}\n{/*  data-fancybox=\"gallery\"*/\n}\n{/*  href=\"https://lipsum.app/id/7/800x450\"*/\n}\n{/*>*/\n}\n{/*  <img className=\"rounded\" src=\"https://lipsum.app/id/7/200x150\"/>*/\n}\n{/*</a>*/\n}","import ImageGallery from \"./ImageGallery\";\n\nexport default ImageGallery","import TextPoint from './TextPoint'\n\nexport default TextPoint\n","import {StaticImage} from 'gatsby-plugin-image'\nimport React from 'react'\nimport HighlighterText from '../HighlighterText'\nimport './text-point.scss'\nimport classNames from \"classnames\";\n\ntype TextPointProps = {\n    text: string\n    searchWords: string[]\n    extraClass?: string\n}\n\nconst TextPoint: React.FC<TextPointProps> = ({text, searchWords, extraClass}) => {\n    const classes = classNames(\"text-point\", extraClass)\n    return (\n        <div className={classes}>\n            <StaticImage\n                className=\"text-point__img\"\n                src=\"../../../../static/images/icons/circle.png\"\n                alt={''}\n            />\n            <HighlighterText\n                className=\"text-point__text\"\n                text={text}\n                searchWords={searchWords}\n            />\n        </div>\n    )\n}\n\nexport default TextPoint\n","import './call-button.scss'\nimport classNames from \"classnames\";\nimport {graphql, useStaticQuery} from \"gatsby\";\nimport React from 'react'\n\ntype CallButtonProps = {\n    extraClass?: string\n}\n\nconst CallButton: React.FC<CallButtonProps> = ({extraClass}) => {\n    const classes = classNames(\"call-btn\", extraClass)\n    const { format_phone } = useStaticQuery(query).contentJson.contacts\n\n    return (\n        <a className={classes} href={`tel:${format_phone}`}>\n            Позвонить\n        </a>\n    )\n}\n\nexport default CallButton\n\nexport const query = graphql`\n  {\n    contentJson {\n      contacts {\n        format_phone\n      }\n    }\n  }\n`\n","import CallButton from './CallButton'\n\nexport default CallButton\n","import Layout from 'components/shared/Layout'\nimport * as React from 'react'\nimport {GatsbyImage, getImage} from 'gatsby-plugin-image'\nimport './styles.scss'\nimport CallButton from 'components/shared/buttons/CallButton'\nimport Container from 'components/shared/Container'\nimport HighlighterText from \"components/shared/HighlighterText\";\nimport TextPoint from \"../../src/components/shared/TextPoint\";\nimport Contacts from \"components/shared/Contacts\";\nimport ImageGallery from \"components/shared/ImageGallery\";\nimport {graphql, Link} from \"gatsby\";\n\n// @ts-ignore\nconst ServicePage = ({data}) => {\n  const image = getImage(data.mdx.frontmatter.image)\n  const {title, subtitle, intro, keywords, paragraphs, points, service_name} = data.mdx.frontmatter\n  const icon = getImage(data.icon)\n\n  return (\n    <Layout pageTitle={data.mdx.frontmatter.title}>\n      <main className='service'>\n        <GatsbyImage\n          image={image}\n          className=\"service__img\"\n          alt={data.mdx.frontmatter.image_alt}\n        />\n        <section className='service__substrate'>\n          <Container>\n            <h1 className=\"service__heading\">{title}</h1>\n            <p className=\"service__subtitle\">{subtitle}</p>\n            <p className=\"service__description\">\n              <HighlighterText text={intro} searchWords={keywords}/>\n            </p>\n            <div className=\"service__btns\">\n              <CallButton/>\n            </div>\n          </Container>\n        </section>\n        <section className=\"service__wrapper\">\n          <Container>\n            {paragraphs.map((text: string, index: number) => (\n              <p className=\"service__text\" key={`service__text-${index}`}>\n                {text}\n              </p>\n            ))}\n            <ul className=\"service__list\">\n              {points.map((point: any, index: number) => {\n                return (\n                  <li className=\"service__item\" key={`service__item-${index}`}>\n                    <div className=\"service__item-top\">\n                      <GatsbyImage className=\"service__icon\" image={icon}\n                                   alt='Иконка для карточки услуги'></GatsbyImage>\n                      <div className=\"service__item-wrapper\">\n                        <div className=\"service__item-title-wrapper\">\n                          <span className=\"service__item-title\">{point.title}</span>\n                          <span className=\"service__item-number\">{point.number}</span>\n                        </div>\n                        <div className=\"service__item-subtitle\">{point.subtitle}</div>\n                      </div>\n                    </div>\n                    <ul className=\"service__point-list\">\n                      {point.points.map((checkPoint: any, index: number) => {\n                        return (\n                          <li className=\"service__point-item\">\n                            <TextPoint text={checkPoint} searchWords={[]}/>\n                          </li>\n                        )\n                      })}\n                    </ul>\n                  </li>\n                )\n              })}\n            </ul>\n          </Container>\n        </section>\n        <section className='service__gallery'>\n          <ImageGallery page={service_name}/>\n          <Link className='service__gallery-link' to={'/gallery'}>Галерея</Link>\n        </section>\n        <Contacts/>\n      </main>\n\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query ServiceBySlug($slug: String!) {\n    mdx(\n        fields: { slug: { eq: $slug } }\n        frontmatter: { type: { eq: \"service\" } }\n    ) {   \n      body\n      slug\n      frontmatter {\n        title\n        subtitle\n        intro\n        paragraphs\n        keywords\n        service_name\n        image_alt\n        image {\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n        points {\n            title\n            subtitle\n            number\n            points\n        }\n      }\n    }\n    contentJson {\n        contacts {\n            phone\n        }\n    }\n    icon: file(name: {eq: \"service-point\"}) {\n        childImageSharp {\n          gatsbyImageData\n        }\n      }\n  }\n`\n\nexport default ServicePage\n"],"names":["Fancybox","props","delegate","useEffect","opts","options","NativeFancybox","React","children","all","page","edges","useStaticQuery","allMdx","filter","edge","node","frontmatter","for_page","Thumbs","Toolbar","Image","zoom","click","wheel","className","Container","Title","title","subtitle","titleSearchWords","map","edgeIndex","key","images","image","imageIndex","hidden","classes","classNames","GatsbyImage","alt","image_alt","getImage","HighlighterText","text","facility","searchWords","description","date","extraClass","StaticImage","src","format_phone","query","contentJson","contacts","href","data","mdx","intro","keywords","paragraphs","points","service_name","icon","Layout","pageTitle","CallButton","index","point","number","checkPoint","TextPoint","ImageGallery","Link","to","Contacts"],"sourceRoot":""}