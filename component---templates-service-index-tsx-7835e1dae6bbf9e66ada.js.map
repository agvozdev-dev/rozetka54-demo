{"version":3,"file":"component---templates-service-index-tsx-7835e1dae6bbf9e66ada.js","mappings":"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","sources":["webpack://gatsby-starter-hello-world/./src/components/shared/TextPoint/index.ts","webpack://gatsby-starter-hello-world/./src/components/shared/TextPoint/TextPoint.tsx","webpack://gatsby-starter-hello-world/./src/components/shared/buttons/CallButton/CallButton.tsx","webpack://gatsby-starter-hello-world/./src/components/shared/buttons/CallButton/index.ts","webpack://gatsby-starter-hello-world/./templates/service/index.tsx"],"sourcesContent":["import TextPoint from './TextPoint'\n\nexport default TextPoint\n","import {StaticImage} from 'gatsby-plugin-image'\nimport React from 'react'\nimport HighlighterText from '../HighlighterText'\nimport './text-point.scss'\nimport classNames from \"classnames\";\n\ntype TextPointProps = {\n    text: string\n    searchWords: string[]\n    extraClass?: string\n}\n\nconst TextPoint: React.FC<TextPointProps> = ({text, searchWords, extraClass}) => {\n    const classes = classNames(\"text-point\", extraClass)\n    return (\n        <div className={classes}>\n            <StaticImage\n                className=\"text-point__img\"\n                src=\"../../../../static/images/icons/circle.png\"\n                alt={''}\n            />\n            <HighlighterText\n                className=\"text-point__text\"\n                text={text}\n                searchWords={searchWords}\n            />\n        </div>\n    )\n}\n\nexport default TextPoint\n","import './call-button.scss'\nimport classNames from \"classnames\";\nimport {graphql, useStaticQuery} from \"gatsby\";\nimport React from 'react'\n\ntype CallButtonProps = {\n    extraClass?: string\n}\n\nconst CallButton: React.FC<CallButtonProps> = ({extraClass}) => {\n    const classes = classNames(\"call-btn\", extraClass)\n    const { phone } = useStaticQuery(query).contentJson.contacts\n\n    return (\n        <a className={classes} href={`tel:${phone}`}>\n            Позвонить\n        </a>\n    )\n}\n\nexport default CallButton\n\nexport const query = graphql`\n  {\n    contentJson {\n      contacts {\n        phone\n      }\n    }\n  }\n`\n","import CallButton from './CallButton'\n\nexport default CallButton\n","import Layout from 'components/shared/Layout'\nimport * as React from 'react'\nimport {graphql} from 'gatsby'\nimport {MDXRenderer} from 'gatsby-plugin-mdx'\nimport {GatsbyImage, getImage} from 'gatsby-plugin-image'\nimport './styles.scss'\nimport CallButton from 'components/shared/buttons/CallButton'\nimport Container from 'components/shared/Container'\nimport HighlighterText from \"components/shared/HighlighterText\";\nimport TextPoint from \"../../src/components/shared/TextPoint\";\nimport Contacts from \"components/shared/Contacts\";\n\n// @ts-ignore\nconst ServicePage = ({data}) => {\n  const image = getImage(data.mdx.frontmatter.image)\n  const {title, subtitle, intro, keywords, text, points} = data.mdx.frontmatter\n  const icon = getImage(data.icon)\n\n  return (\n    <Layout pageTitle={data.mdx.frontmatter.title}>\n      <main className='service'>\n        <GatsbyImage\n          image={image}\n          className=\"service__img\"\n          alt={data.mdx.frontmatter.image_alt}\n        />\n        <section className='service__substrate'>\n          <Container>\n            <h2 className=\"service__heading\">{title}</h2>\n            <p className=\"service__subtitle\">{subtitle}</p>\n            <p className=\"service__description\">\n              <HighlighterText text={intro} searchWords={keywords}/>\n            </p>\n            <div className=\"service__btns\">\n              <CallButton/>\n            </div>\n          </Container>\n        </section>\n        <section className=\"service__wrapper\">\n          <Container>\n            <p className=\"service__text\">\n              {text}\n            </p>\n            <ul className=\"service__list\">\n              {points.map((point: any, index: number) => {\n                return (\n                  <li className=\"service__item\" key={`service__item-${index}`}>\n                    <div className=\"service__item-top\">\n                      <GatsbyImage className=\"service__icon\" image={icon}\n                                   alt='Иконка для карточки услуги'></GatsbyImage>\n                      <div className=\"service__item-wrapper\">\n                        <div className=\"service__item-title-wrapper\">\n                          <span className=\"service__item-title\">{point.title}</span>\n                          <span className=\"service__item-number\">{point.number}</span>\n                        </div>\n                        <div className=\"service__item-subtitle\">{point.subtitle}</div>\n                      </div>\n                    </div>\n                    <ul className=\"service__point-list\">\n                      {point.points.map((checkPoint: any, index: number) => {\n                        return (\n                          <li className=\"service__point-item\">\n                            <TextPoint text={checkPoint} searchWords={[]}/>\n                          </li>\n                        )\n                      })}\n                    </ul>\n                  </li>\n\n                )\n              })}\n            </ul>\n\n          </Container>\n        </section>\n      </main>\n      <Contacts/>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query ServiceBySlug($slug: String!) {\n    mdx(\n        fields: { slug: { eq: $slug } }\n        frontmatter: { type: { eq: \"service\" } }\n    ) {   \n      body\n      slug\n      frontmatter {\n        title\n        subtitle\n        intro\n        text\n        keywords\n        image_alt\n        image {\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n        points {\n            title\n            subtitle\n            number\n            points\n        }\n      }\n    }\n    contentJson {\n        contacts {\n            phone\n        }\n    }\n    icon: file(name: {eq: \"service-point\"}) {\n        childImageSharp {\n          gatsbyImageData\n        }\n      }\n  }\n`\n\nexport default ServicePage\n"],"names":["text","searchWords","extraClass","classes","classNames","React","className","StaticImage","src","alt","HighlighterText","phone","useStaticQuery","query","contentJson","contacts","href","data","image","getImage","mdx","frontmatter","title","subtitle","intro","keywords","points","icon","Layout","pageTitle","GatsbyImage","image_alt","Container","CallButton","map","point","index","key","number","checkPoint","TextPoint","Contacts"],"sourceRoot":""}